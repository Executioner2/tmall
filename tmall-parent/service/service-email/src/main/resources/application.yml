server:
  port: 8205

spring:
  application:
    name: service-email
  redis:
    host: 192.168.123.130
    port: 6379
    database: 2 # 使用2号数据库
    timeout: 1800000
    lettuce:
      pool:
        max-active: 20
        max-wait: -1
        max-idle: 5
        min-idle: 0
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.123.130
    stream:
      binders: # 在此处配置要绑定的rabbitmq的服务信息；
        defaultRabbit: # 表示定义的名称，用于于binding整合
          type: rabbit # 消息组件类型
          environment: # 设置rabbitmq的相关的环境配置
            spring:
              rabbitmq:
                host: 192.168.123.130
                port: 5672
                username: root
                password: 123321
      bindings: # 服务的整合处理
        codeReceive: # 这个名字是一个通道的名称
          destination: exchange.direct.email # 表示要使用的Exchange名称定义
          content-type: application/json # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
          binder: defaultRabbit # 设置要绑定的消息服务的具体设置
          # 解决消费者重复读取队列中的消息，就是分组，同一个分组的消费者只会拿一次，不会都同时拿相同的（轮询策略）
          # 分组还能实现消息持久化
          group: code_send #<---关键
        codeDelReceive: # 邮箱验证码删除消息接收者
          destination: exchange.direct.email # 表示要使用的Exchange名称定义
          content-type: application/json # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
          binder: defaultRabbit # 设置要绑定的消息服务的具体设置
          # 解决消费者重复读取队列中的消息，就是分组，同一个分组的消费者只会拿一次，不会都同时拿相同的（轮询策略）
          # 分组还能实现消息持久化
          group: code_del #<---关键
        dealNotifyReceive: # 订单状态消息接收者
          destination: exchange.direct.deal # 表示要使用的Exchange名称定义
          content-type: application/json # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
          binder: defaultRabbit # 设置要绑定的消息服务的具体设置
          # 解决消费者重复读取队列中的消息，就是分组，同一个分组的消费者只会拿一次，不会都同时拿相同的（轮询策略）
          # 分组还能实现消息持久化
          group: order_status #<---关键
        timerTaskReceive: # 计时器任务接收者
          destination: exchange.direct.task # 表示要使用的Exchange名称定义
          content-type: application/json # 设置消息类型，本次为对象json，如果是文本则设置“text/plain”
          binder: defaultRabbit # 设置要绑定的消息服务的具体设置
          # 解决消费者重复读取队列中的消息，就是分组，同一个分组的消费者只会拿一次，不会都同时拿相同的（轮询策略）
          # 分组还能实现消息持久化
          group: timer_task #<---关键
  mail:
    host: smtp.qq.com
    port: 587
    username: 1205878539@qq.com
    password: xhuahrwqohznjggc

# 这个是自己定义的参数，不同于上面的
main:
  project: tmall-v1.0
  author: 2Executioner

logging:
  level:
    org:
      springframework:
        boot:
          autoconfigure: error